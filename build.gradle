buildscript {
    ext {
        projectVersion = '1.2.1'

        gradleWrapperVersion = '3.4.1'

        coverallsGradlePluginVersion = '2.8.1'

        asmVersion = '5.2'
        junitVersion = '4.12'
    }

    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:' + coverallsGradlePluginVersion
    }
}

description = 'JIP is a code profiling tool much like the hprof tool that ships with the JDK'

subprojects {
    apply plugin: 'java'
    apply plugin: 'pmd'
    apply plugin: 'jacoco'
    apply plugin: 'com.github.kt3k.coveralls'

    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    version = projectVersion

    repositories {
        mavenCentral()
    }

    task wrapper(type: Wrapper) {
        gradleVersion = gradleWrapperVersion
    }

    test.onlyIf {
        !Boolean.getBoolean('skip.tests')
    }

    pmd {
        ignoreFailures = true
        ruleSets = [
                'java-basic',
                'java-braces',
                'java-clone',
                'java-codesize',
                'java-comments',
                'java-controversial',
                'java-design',
                'java-empty',
                'java-finalizers',
                'java-imports',
                'java-j2ee',
                'java-javabeans',
                'java-junit',
                'java-logging-jakarta-commons',
                'java-logging-java',
                'java-migrating',
                'java-naming',
                'java-optimizations',
                'java-strictexception',
                'java-strings',
                'java-sunsecure',
                'java-typeresolution',
                'java-unnecessary',
                'java-unusedcode'
        ]
    }

    tasks.withType(Pmd) {
        reports {
            xml.enabled = false
            html.enabled = true
        }
    }

    tasks.coveralls {
        dependsOn 'check'
    }

    jacocoTestReport {
        reports {
            xml.enabled = true
            html.enabled = false
        }
    }
}

project(':jip') {
    jar.baseName = 'profile'

    jar {
        manifest {
            attributes 'Premain-Class': 'com.mentorgen.tools.profile.Main'
        }

        from {
            configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
        }

        version = null
    }

    dependencies {
        implementation group: 'org.ow2.asm', name: 'asm', version: asmVersion

        testImplementation group: 'junit', name: 'junit', version: junitVersion
    }
}

project(':jip-plugin') {
    jar {
        manifest {
            attributes 'Bundle-ManifestVersion': 2,
                    'Bundle-Name': 'JIP Plug-in',
                    'Bundle-SymbolicName': 'com.mentorgen.tools.profile; singleton:=true',
                    'Bundle-Version': '1.0.0',
                    'Bundle-Localization': 'plugin',
                    'Require-Bundle': 'org.eclipse.core.runtime, org.eclipse.ui',
                    'Eclipse-AutoStart': 'true',
                    'Import-Package': 'org.eclipse.core.runtime, org.eclipse.ui, org.eclipse.swt, org.eclipse.jface'
        }
    }
    dependencies {
        implementation fileTree(dir: 'lib', include: '*.jar')
    }
}

project(':jip-snapman') {
    dependencies {
        implementation fileTree(dir: 'lib', include: '*.jar')
    }

    jar {
        manifest {
            attributes 'Main-Class': 'com.mentorgen.tools.util.profile.Client'
        }
    }
}

project(':jip-viewer') {
    jar {
        manifest {
            attributes 'Main-Class': 'com.mentorgen.tools.profile.Main'
        }
    }
}

project(':simple-profiler') {
    jar {
        manifest {
            attributes 'Premain-Class': 'sample.profiler.Main'
        }
    }

    dependencies {
        implementation group: 'org.ow2.asm', name: 'asm', version: asmVersion
    }
}

project(':verbose-class') {
    jar {
        manifest {
            attributes 'Premain-Class': 'sample.verboseclass.Main'
        }
    }
}